// <auto-generated />
using System;
using FirstAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231201015137_musicEntity")]
    partial class musicEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstAPI.Models.Domain.MusicEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MusicEntities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MusicEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Album", b =>
                {
                    b.HasBaseType("FirstAPI.Models.Domain.MusicEntity");

                    b.Property<string>("AlbumTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MusicEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MusicEntityId");

                    b.HasDiscriminator().HasValue("Album");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Song", b =>
                {
                    b.HasBaseType("FirstAPI.Models.Domain.MusicEntity");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MusicEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AlbumId");

                    b.HasIndex("MusicEntityId");

                    b.ToTable("MusicEntities", t =>
                        {
                            t.Property("MusicEntityId")
                                .HasColumnName("Song_MusicEntityId");
                        });

                    b.HasDiscriminator().HasValue("Song");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Album", b =>
                {
                    b.HasOne("FirstAPI.Models.Domain.MusicEntity", "MusicEntity")
                        .WithMany("PopularAlbums")
                        .HasForeignKey("MusicEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MusicEntity");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Song", b =>
                {
                    b.HasOne("FirstAPI.Models.Domain.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FirstAPI.Models.Domain.MusicEntity", "MusicEntity")
                        .WithMany("PopularSongs")
                        .HasForeignKey("MusicEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("MusicEntity");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.MusicEntity", b =>
                {
                    b.Navigation("PopularAlbums");

                    b.Navigation("PopularSongs");
                });

            modelBuilder.Entity("FirstAPI.Models.Domain.Album", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
